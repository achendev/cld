#!/bin/bash
VM_LIST() {
(
for GROUP in $(ls /var/cld/access/groups/)
do
grep -qs "1" /var/cld/access/groups/${GROUP}/type \
&& cat /var/cld/access/groups/${GROUP}/clouds \
|| cut -d _ -f -4 /var/cld/access/groups/${GROUP}/clouds
done
) | grep -v "^$"
}

CLD_LOGS() {
mkdir -p /var/cld/log/session/ &>/dev/null
CLD_LOG=/var/cld/log/session/${SUDO_USER}_${VM}_`date +"%d-%m-%y_%H-%M"`
}

CLD_DEPLOY_LOGS() {
mkdir -p /var/cld/deploy/actions/${ACTION_NAME}/deploy_log &>/dev/null
CLD_ACTION_LOG=/var/cld/deploy/actions/${ACTION_NAME}/deploy_log/${VM}
[ "$TEST" == "1" ] && mkdir -p /var/cld/deploy/actions/${ACTION_NAME}/test_log &>/dev/null
[ "$TEST" == "1" ] && CLD_ACTION_TEST_LOG=/var/cld/deploy/actions/${ACTION_NAME}/test_log/${VM}
}

EXTERNAL_VARS() {
VMN=`echo $VM | cut -d "_" -f 1`
SRV=`echo $VM | cut -d "_" -f 2`
PRT=`echo $VM | cut -d "_" -f 3`
USR=`echo $VM | cut -d "_" -f 4`
PWD=`grep $VM /var/cld/access/groups/${GROUP}/clouds | cut -d _ -f 5-`
}

EXTERNAL_MOUNT() {
LOCALMOUNTPATH="/home/${SUDO_USER}/mnt/${VM}"
if [ ! -d "$DIR" ]; then mkdir -p $LOCALMOUNTPATH ;fi
fusermount -uzq $LOCALMOUNTPATH >> /dev/null
mkdir -p $LOCALMOUNTPATH 2>&1 >/dev/null
echo $PWD | grep -q "^$" || PWDOPT="-o password_stdin"
#    DEVICE=$(ssh -q -o "RequestTTY force" $USR@$MSK "sudo prlctl exec $CT df -P" | tr '\r' '\n' | egrep "/$" | awk '{print $1}' | tr -d '\r' | tr -d '\n') >> /dev/null
#    VZPOINT=$(ssh -q -o "RequestTTY force" $USR@$MSK "df -P" | tr '\r' '\n' | grep "$DEVICE" | awk '{print $6}' | tr -d '\r' | tr -d '\n') >> /dev/null
echo $USR | grep -q root || SFTP_PATH=$(sshpass -p "$PWD" ssh -q -p ${PRT} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" $USR@$SRV "sudo grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n')
echo $USR | grep -q root || SUDO_PATH=$(sshpass -p "$PWD" ssh -q -p ${PRT} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" $USR@$SRV "which sudo" | tr -d '\r' | tr -d '\n')
mkdir -p $LOCALMOUNTPATH 2>&1 >/dev/null
echo $USR | grep -q root || sshfs -p $PRT ${PWDOPT} -o sftp_server="${SUDO_PATH} ${SFTP_PATH}" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no $USR@$SRV:/ $LOCALMOUNTPATH <<< "$PWD" 2>&1 >/dev/null
echo $USR | grep -q root && sshfs -p $PRT ${PWDOPT} -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no $USR@$SRV:/ $LOCALMOUNTPATH <<< "$PWD" 2>&1 >/dev/null
}

EXTERNAL_TERMINAL() {
[ "$USR" == "root" ] && sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV  | tee -a $CLD_LOG
[ "$USR" == "root" ] || sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV "sudo -i" | tee -a $CLD_LOG
}

EXTERNAL_DEPLOY() {
[ "$USR" == "root" ] && sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV "bash -s" 2>&1
[ "$USR" == "root" ] || sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV "sudo bash -s" 2>&1
}

EXTERNAL_DEPLOY_NOTTY() {
[ "$USR" == "root" ] && sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p $PRT $USR@$SRV "bash -s" 2>&1
[ "$USR" == "root" ] || sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p $PRT $USR@$SRV "sudo bash -s" 2>&1
}

EXTERNAL_UMOUNT() {
LOCALMOUNTPATH=`echo "/home/$SUDO_USER/mnt/$VM"` >> /dev/null ; fusermount -uzq $LOCALMOUNTPATH >> /dev/null ; rmdir $LOCALMOUNTPATH
}

CLOUDS_USER_ALLOWED() {
for OPTS in ${@:1}
do
echo $OPTS | grep -q  '^\--groups=' && GROUPS="$(echo $OPTS | cut -d '=' -f 2 | tr ',' '\n')"
done
if [ "$GROUPS" != "" ]
then
for GROUP in $(grep -v "^$\|^#" /var/cld/access/users/${SUDO_USER}/groups | grep "${GROUPS}")
do
cut -d _ -f -4 /var/cld/access/groups/${GROUP}/clouds | grep -vh "^$\|^#" 2>/dev/null
done
else
for GROUP in $(grep -v "^$\|^#" /var/cld/access/users/${SUDO_USER}/groups)
do
cut -d _ -f -4 /var/cld/access/groups/${GROUP}/clouds | grep -vh "^$\|^#" 2>/dev/null
done
cut -d _ -f -4 /var/cld/access/users/${SUDO_USER}/clouds | grep -vh "^$\|^#" 2>/dev/null
fi
}

CHECK_DNS()
{
grep "$1" -qR --color=always /var/cld/modules/dns/data/*/`TZ=Europe/Moscow date +%F`/ \
&& echo "###############################################" \
&& echo "Info by matching first argument with DNS lists:" | grep --color=always "DNS" \
&& grep "$1" -R --color=always /var/cld/modules/dns/data/*/`TZ=Europe/Moscow date +%F`/ \
&& echo "###############################################" && echo
}

cldtail()
{
while read -re LINE
do
[ "$iln" -gt "$1" ] &>/dev/null && cat << EOL || let iln++
$LINE
EOL
done
}

echoexit1()
{
echo "${@:1}"
exit 1
}

CUSTOM_FUNCS_ACTIVATE(){
source  <(for GROUPFUNC in funcvars functerm funcmount funcumount 
    do
      echo "${GROUP}_${GROUPFUNC}(){"
      cat /var/cld/access/groups/${GROUP}/${GROUPFUNC}
      echo '}'
    done)
  alias EXTERNAL_VARS=${GROUP}_funcvars
  alias EXTERNAL_MOUNT=${GROUP}_funcmount
  alias EXTERNAL_TERMINAL=${GROUP}_functerm
  alias EXTERNAL_UMOUNT=${GROUP}_funcumount
  echo CUSTOM_FUNCS_ACTIVATE
}