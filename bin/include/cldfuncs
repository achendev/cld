VM_LIST() {
(
cat /var/cld/creds/ct_px_hyper_list 2>/dev/null
cat /var/cld/creds/ct_vz_hyper_list 2>/dev/null
cat /var/cld/creds/ct_virtuozzo_hyper_list 2>/dev/null
grep -vh "^$\|^#" /var/cld/creds/ext_do_list 2>/dev/null
sed -r 's#(.*_.*_[0-9]+_[a-zA-Z0-9]+)_.*#\1#g' /var/cld/creds/ext_srv_list | grep -vh "^$\|^#" 2>/dev/null
cat /var/cld/creds/ct_px_hyper_list_offline 2>/dev/null
) | grep -v "^$"
}

CLD_LOGS() {
mkdir -p /var/cld/log/session/ &>/dev/null
CLD_LOG=/var/cld/log/session/${SUDO_USER}_${VM}_`date +"%d-%m-%y_%H-%M"`
}

PROXMOX_VARS() {
echo
echo "You had chosen Proxmox $VM"
CTNAME="`echo "$VM" | cut -d "_" -f 1`_`echo "$VM" | cut -d "_" -f 3`"
HPROLD=`echo "$VM" | cut -d "_" -f 2`
HPR=$(echo "$VM" | cut -d "_" -f 2)
#   HPR=${HPROLD#*-*-}
CT=`echo "$VM" | cut -d "_" -f 3`
}

PROXMOX_MOUNT() {
LOCALMOUNTPATH="/home/${SUDO_USER}/mnt/${VM}"
if [ ! -d "$DIR" ]; then mkdir -p $LOCALMOUNTPATH ;fi
fusermount -uzq $LOCALMOUNTPATH >> /dev/null
mkdir -p $LOCALMOUNTPATH >> /dev/null
DEVICE=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "sudo pct exec $CT -- df -P" | tr '\r' '\n' | egrep "/$" | awk '{print $1}' |  tr -d '\n') >> /dev/null
if echo $DEVICE | egrep --quiet "^[/].*" ; then
  ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "sudo mkdir /mnt/$CT" >> /dev/null ; ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "sudo mount $DEVICE /mnt/$CT" >> /dev/null
  SFTP_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n') >> /dev/null
  SUDO_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "which sudo" | tr -d '\r' | tr -d '\n') >> /dev/null
  sshfs -p 55567 -o sftp_server="$SUDO_PATH $SFTP_PATH" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no clouds@$HPR:/mnt/$CT $LOCALMOUNTPATH >> /dev/null
else
  SFTP_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n') >> /dev/null
  SUDO_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "which sudo" | tr -d '\r' | tr -d '\n') >> /dev/null
  sshfs -p 55567 -o sftp_server="$SUDO_PATH $SFTP_PATH" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no clouds@$HPR:/$DEVICE $LOCALMOUNTPATH >> /dev/null
fi
}

PROXMOX_TERMINAL() {
ssh -q -p 55567 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" clouds@$HPR "sudo pct enter $CT" | tee -a $CLD_LOG
}

PROXMOX_UMOUNT() {
LOCALMOUNTPATH=`echo "/home/$SUDO_USER/mnt/$VM"` >> /dev/null ; fusermount -uzq $LOCALMOUNTPATH >> /dev/null ; rmdir $LOCALMOUNTPATH
}

EXTERNAL_VARS() {
echo
echo "You had chosen external $VM"
SRV=`echo $VM | cut -d "_" -f 2`
PRT=`echo $VM | cut -d "_" -f 3`
timeout 1 nc -z ${SRV} 55567 && PRT=55567 && echo port was changed to $PRT
USR=`echo $VM | cut -d "_" -f 4`
PWD=`grep $VM /var/cld/creds/ext_srv_list | sed -r 's#.*_.*_[0-9]+_[a-zA-Z0-9]+_(.*)#\1#g'`
}

EXTERNAL_MOUNT() {
LOCALMOUNTPATH="/home/${SUDO_USER}/mnt/${VM}"
if [ ! -d "$DIR" ]; then mkdir -p $LOCALMOUNTPATH ;fi
fusermount -uzq $LOCALMOUNTPATH >> /dev/null
mkdir -p $LOCALMOUNTPATH 2>&1 >/dev/null
#    DEVICE=$(ssh -q -o "RequestTTY force" $USR@$MSK "sudo prlctl exec $CT df -P" | tr '\r' '\n' | egrep "/$" | awk '{print $1}' | tr -d '\r' | tr -d '\n') >> /dev/null
#    VZPOINT=$(ssh -q -o "RequestTTY force" $USR@$MSK "df -P" | tr '\r' '\n' | grep "$DEVICE" | awk '{print $6}' | tr -d '\r' | tr -d '\n') >> /dev/null
echo $USR | grep -q clouds && SFTP_PATH=$(ssh -q -p 55567 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" $USR@$SRV "grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n')
echo $USR | grep -q clouds && SUDO_PATH=$(ssh -q -p 55567 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" $USR@$SRV "which sudo" | tr -d '\r' | tr -d '\n')
mkdir -p $LOCALMOUNTPATH 2>&1 >/dev/null
echo $USR | grep -q clouds && sshfs -p $PRT -o password_stdin -o sftp_server="${SUDO_PATH} ${SFTP_PATH}" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no $USR@$SRV:/ $LOCALMOUNTPATH 2>&1 >/dev/null
echo $USR | grep -q clouds || sshfs -p $PRT -o password_stdin -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no $USR@$SRV:/ $LOCALMOUNTPATH <<< "$PWD" 2>&1 >/dev/null
}

EXTERNAL_TERMINAL() {
echo $USR | grep -q root && sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV | tee -a $CLD_LOG
echo $USR | grep -q root || sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV "sudo -i" | tee -a $CLD_LOG
}

EXTERNAL_UMOUNT() {
LOCALMOUNTPATH=`echo "/home/$SUDO_USER/mnt/$VM"` >> /dev/null ; fusermount -uzq $LOCALMOUNTPATH >> /dev/null ; rmdir $LOCALMOUNTPATH
}

VIRTUOZZO_VARS() {
echo
echo "You had chosen Virtuozzo $VM"
HPR=`echo "$VM" | cut -d "_" -f 2`
CT=`echo "$VM" | cut -d "_" -f 1`
}

VIRTUOZZO_MOUNT() {
LOCALMOUNTPATH="/home/${SUDO_USER}/mnt/${VM}" >> /dev/null
if [ ! -d "$DIR" ]; then mkdir -p $LOCALMOUNTPATH ;fi
fusermount -uzq $LOCALMOUNTPATH >> /dev/null
mkdir -p $LOCALMOUNTPATH >> /dev/null
DEVICE=$(ssh -q -o "RequestTTY force" clouds@$HPR "sudo prlctl exec $CT df -P" | tr '\r' '\n' | egrep "/$" | awk '{print $1}' | tr -d '\r' | tr -d '\n') >> /dev/null
VZPOINT=$(ssh -q -o "RequestTTY force" root@$HPR "df -P" | tr '\r' '\n' | grep "$DEVICE" | awk '{print $6}' | tr -d '\r' | tr -d '\n') >> /dev/null
SFTP_PATH=$(ssh -q -o "RequestTTY force" clouds@$HPR "grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n') >> /dev/null
SUDO_PATH=$(ssh -q -o "RequestTTY force" clouds@$HPR "which sudo" | tr -d '\r' | tr -d '\n') >> /dev/null
sshfs -o sftp_server="$SUDO_PATH S$FTP_PATH" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no clouds@$HPR:$VZPOINT $LOCALMOUNTPATH >> /dev/null
}

VIRTUOZZO_TERMINAL() {
ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" clouds@$HPR "sudo prlctl enter $CT" | tee -a $CLD_LOG
}

VIRTUOZZO_UMOUNT() {
LOCALMOUNTPATH=`echo "/home/$SUDO_USER/mnt/$VM"` >> /dev/null ; fusermount -uzq $LOCALMOUNTPATH >> /dev/null ; rmdir $LOCALMOUNTPATH
}

OPENVZ_VARS() {
echo
echo "You had chosen OpenVZ $VM"
CTNAME="`echo "$VM" | cut -d "_" -f 1`_`echo "$VM" | cut -d "_" -f 3`"
HPR=`echo "$VM" | cut -d "_" -f 2`
CT=`echo "$VM" | cut -d "_" -f 3`
}

OPENVZ_MOUNT() {
LOCALMOUNTPATH="/home/${SUDO_USER}/mnt/${VM}" >> /dev/null
if [ ! -d "$DIR" ]; then mkdir -p $LOCALMOUNTPATH ;fi
fusermount -uzq $LOCALMOUNTPATH &>/dev/null
mkdir -p $LOCALMOUNTPATH &>/dev/null
DEVICE=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "sudo pct exec $CT -- df -P" | tr '\r' '\n' | egrep "/$" | awk '{print $1}' |  tr -d '\n') &>/dev/null
if echo $DEVICE | egrep --quiet "^[/].*" ; then
ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "sudo mkdir /mnt/$CT" &>/dev/null ; ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "sudo mount $DEVICE /mnt/$CT" &>/dev/null
SFTP_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n') &>/dev/null
SUDO_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "which sudo" | tr -d '\r' | tr -d '\n') &>/dev/null
sshfs -p 55567 -o sftp_server="$SUDO_PATH $SFTP_PATH" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no clouds@$HPR:/mnt/$CT $LOCALMOUNTPATH &>/dev/null
else
SFTP_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n') &>/dev/null
SUDO_PATH=$(ssh -q -p 55567 -o "RequestTTY force" clouds@$HPR "which sudo" | tr -d '\r' | tr -d '\n') &>/dev/null
sshfs -p 55567 -o sftp_server="$SUDO_PATH $SFTP_PATH" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no clouds@$HPR:/$DEVICE $LOCALMOUNTPATH &>/dev/null
fi
}

OPENVZ_TERMINAL() {
ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p 55567 clouds@$HPR "sudo vzctl enter $CT" | tee -a $CLD_LOG
}

OPENVZ_UMOUNT() {
LOCALMOUNTPATH=`echo "/home/$SUDO_USER/mnt/$VM"` &>/dev/null ; fusermount -uzq $LOCALMOUNTPATH &>/dev/null ; rmdir $LOCALMOUNTPATH
}

CLOUDS_USER_ALLOWED() {
for GROUP in $(cat /var/cld/access/users/${SUDO_USER}/groups)
do
sed -r 's#(.*_.*_[0-9]+_[a-zA-Z0-9]+)_.*#\1#g' /var/cld/access/groups/${GROUP}/clouds | grep -vh "^$\|^#" 2>/dev/null
done
sed -r 's#(.*_.*_[0-9]+_[a-zA-Z0-9]+)_.*#\1#g' /var/cld/access/users/${SUDO_USER}/clouds | grep -vh "^$\|^#" 2>/dev/null
}

CUSTOM_FUNCS_ACTIVATE(){
source  <(for GROUPFUNC in funcvars functerm funcmount funcumount 
    do
      echo "${GROUP}_${GROUPFUNC}(){"
      cat /var/cld/access/groups/${GROUP}/${GROUPFUNC}
      echo '}'
    done)
  alias EXTERNAL_VARS=${GROUP}_funcvars
  alias EXTERNAL_MOUNT=${GROUP}_funcmount
  alias EXTERNAL_TERMINAL=${GROUP}_functerm
  alias EXTERNAL_UMOUNT=${GROUP}_funcumount
  echo CUSTOM_FUNCS_ACTIVATE
}