#!/bin/bash
VM_LIST() {
(
for GROUP in $(ls /var/cld/access/groups/)
do
grep -qs "1" /var/cld/access/groups/${GROUP}/type \
&& cat /var/cld/access/groups/${GROUP}/clouds \
|| cut -d _ -f -4 /var/cld/access/groups/${GROUP}/clouds
done
) | grep -v "^$"
}

CLD_LOGS() {
mkdir -p /var/cld/log/session/ &>/dev/null
CLD_LOG=/var/cld/log/session/${SUDO_USER}_${VM}_`date +"%d-%m-%y_%H-%M"`
}

EXTERNAL_VARS() {
echo
echo "You had chosen external $VM"
SRV=`echo $VM | cut -d "_" -f 2`
PRT=`echo $VM | cut -d "_" -f 3`
timeout 1 nc -z ${SRV} 55567 && PRT=55567 && echo port was changed to $PRT
USR=`echo $VM | cut -d "_" -f 4`
PWD=`grep $VM /var/cld/access/groups/${GROUP}/clouds | cut -d _ -f 5-`
}

EXTERNAL_MOUNT() {
LOCALMOUNTPATH="/home/${SUDO_USER}/mnt/${VM}"
if [ ! -d "$DIR" ]; then mkdir -p $LOCALMOUNTPATH ;fi
fusermount -uzq $LOCALMOUNTPATH >> /dev/null
mkdir -p $LOCALMOUNTPATH 2>&1 >/dev/null
#    DEVICE=$(ssh -q -o "RequestTTY force" $USR@$MSK "sudo prlctl exec $CT df -P" | tr '\r' '\n' | egrep "/$" | awk '{print $1}' | tr -d '\r' | tr -d '\n') >> /dev/null
#    VZPOINT=$(ssh -q -o "RequestTTY force" $USR@$MSK "df -P" | tr '\r' '\n' | grep "$DEVICE" | awk '{print $6}' | tr -d '\r' | tr -d '\n') >> /dev/null
echo $USR | grep -q clouds && SFTP_PATH=$(ssh -q -p ${PRT} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" $USR@$SRV "grep sftp /etc/ssh/sshd_config" | awk '{print $3}' | tr -d '\r' | tr -d '\n')
echo $USR | grep -q clouds && SUDO_PATH=$(ssh -q -p ${PRT} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" $USR@$SRV "which sudo" | tr -d '\r' | tr -d '\n')
mkdir -p $LOCALMOUNTPATH 2>&1 >/dev/null
echo $USR | grep -q clouds && sshfs -p $PRT -o password_stdin -o sftp_server="${SUDO_PATH} ${SFTP_PATH}" -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no $USR@$SRV:/ $LOCALMOUNTPATH 2>&1 >/dev/null
echo $USR | grep -q clouds || sshfs -p $PRT -o password_stdin -o allow_other,UserKnownHostsFile=/dev/null,StrictHostKeyChecking=no $USR@$SRV:/ $LOCALMOUNTPATH <<< "$PWD" 2>&1 >/dev/null
}

EXTERNAL_TERMINAL() {
echo $USR | grep -q root && sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV | tee -a $CLD_LOG
echo $USR | grep -q root || sshpass -p "$PWD" ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o "RequestTTY force" -p $PRT $USR@$SRV "sudo -i" | tee -a $CLD_LOG
}

EXTERNAL_UMOUNT() {
LOCALMOUNTPATH=`echo "/home/$SUDO_USER/mnt/$VM"` >> /dev/null ; fusermount -uzq $LOCALMOUNTPATH >> /dev/null ; rmdir $LOCALMOUNTPATH
}

CLOUDS_USER_ALLOWED() {
for GROUP in $(cat /var/cld/access/users/${SUDO_USER}/groups)
do
cut -d _ -f -4 /var/cld/access/groups/${GROUP}/clouds | grep -vh "^$\|^#" 2>/dev/null
done
cut -d _ -f -4 /var/cld/access/users/${SUDO_USER}/clouds | grep -vh "^$\|^#" 2>/dev/null
}

CUSTOM_FUNCS_ACTIVATE(){
source  <(for GROUPFUNC in funcvars functerm funcmount funcumount 
    do
      echo "${GROUP}_${GROUPFUNC}(){"
      cat /var/cld/access/groups/${GROUP}/${GROUPFUNC}
      echo '}'
    done)
  alias EXTERNAL_VARS=${GROUP}_funcvars
  alias EXTERNAL_MOUNT=${GROUP}_funcmount
  alias EXTERNAL_TERMINAL=${GROUP}_functerm
  alias EXTERNAL_UMOUNT=${GROUP}_funcumount
  echo CUSTOM_FUNCS_ACTIVATE
}