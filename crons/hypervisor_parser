#!/bin/bash
cd "$(dirname "${BASH_SOURCE[0]}")"
source ../config/variables
source ../creds/creds

### MIKROTIK FORWARDING LIST START
truncate -s0 /var/cld/creds/mikrotik_ip_list
for MK in `cat /var/cld/creds/mk_list | cut -d '_' -f 1`
do
#ssh newadmin@${MK} "/export"
timeout 15 sshpass -p "${DEFAULT_MIKROTIK_PASSWORD}" ssh -o "StrictHostKeyChecking no" ${DEFAULT_MIKROTIK_USER}@${MK} "/export" | tr -d '\r' | grep -A1 -B1 "dst\-nat\|netmap" | sed 's#\\#_#g' | tr '\n' '@' | sed 's#_@#___#g' | sed 's#@#\n#g' | egrep ".*=80"\|".*=443" | egrep -v  "80[0-9]+" | sed 's#___    ##g' | grep -Po "dst-address=\d+\.\d+\.\d+\.\d+.*to-addresses=\d+\.\d+\.\d+\.\d+" | sed 's#=# #g' | awk '{print $8"_"$2}' | sort -n | uniq >> /var/cld/creds/mikrotik_ip_list &
done
wait
### MIKROTIK FORWARDING LIST END


### VIRTUOZZO PARSE START
truncate -s 0 /var/cld/tmp/temp_ct_hyper_list
temp_ct_hyper_list="/var/cld/tmp/temp_ct_hyper_list"
ct_hyper_list="/var/cld/creds/ct_hyper_list"
for hyper in $(cat /var/cld/creds/hyper_list)
do timeout 5 ssh clouds@$hyper "sudo prlctl list | grep -v 'UUID\|stopped'" | awk '{print $5"_HYPER"}' | sed "s#HYPER#$hyper#g" >> $temp_ct_hyper_list
done
rm -f $ct_hyper_list ; mv $temp_ct_hyper_list $ct_hyper_list
### VIRTUOZZO PARSE END


### PROXMOX PARSE START
GET_CT_PX_LIST=$(cat << 'EOCTPXLIST'
for CTIDIP in $(sudo /usr/sbin/pct list | grep "running" | grep -v 'VMID\|CTID' | awk '{print $1}')
do
echo -n "${CTIDIP} "
sudo grep -Po "ip=\d+\.\d+\.\d+\.\d+"\|"hostname:.*" /etc/pve/lxc/${CTIDIP}.conf | sed -e 's#ip=##g' -e 's#hostname: ##g' | tr '\n' ' ' | grep ""
done

for CTIDIP in $(sudo /usr/sbin/pct list | grep -v "running" | grep -v 'VMID\|CTID' | awk '{print $1}')
do
echo -n "${CTIDIP}-STOPPED-`stat /var/lib/lxc/${CTIDIP}/config | awk 'NR==5 {print $2}' | tr -d '\n'` "
sudo grep -Po "ip=\d+\.\d+\.\d+\.\d+"\|"hostname:.*" /etc/pve/lxc/${CTIDIP}.conf | sed -e 's#ip=##g' -e 's#hostname: ##g' | tr '\n' ' ' | grep ""
done
EOCTPXLIST
)

/bin/cp /var/cld/creds/ct_px_hyper_list /var/cld/creds/ct_px_hyper_list_prev
truncate -s 0 /var/cld/tmp/temp_px_ct_hyper_list
truncate -s 0 /var/cld/tmp/gray_ip_list_tmp
temp_px_ct_hyper_list="/var/cld/tmp/temp_px_ct_hyper_list"
ct_px_hyper_list="/var/cld/creds/ct_px_hyper_list"

for px_hyper in $(cat /var/cld/creds/px_hyper_list)
do
px_hyper_host=$(echo ${px_hyper} | cut -d _ -f 1)
px_hyper_port=$(echo ${px_hyper} | cut -d _ -f 2) ; echo ${px_hyper_port} | grep -q "${px_hyper_host}" && export px_hyper_port=$DEFAULT_PX_HPR_PORT
px_hyper_user=$(echo ${px_hyper} | cut -d _ -f 3) ; echo ${px_hyper_user} | grep -q "${px_hyper_host}" && export px_hyper_user=$DEFAULT_PX_HPR_USER
#echo $px_hyper
timeout 20 ssh -o "StrictHostKeyChecking no" -p ${px_hyper_port} ${px_hyper_user}@${px_hyper_host} "bash -s" << EOSCRIPT | awk '{print $2"_HYPER_"$1"_"$3}' | sed "s#HYPER#$px_hyper_host#g" >> $temp_px_ct_hyper_list &
$GET_CT_PX_LIST
EOSCRIPT
timeout 25 ssh -o "StrictHostKeyChecking no" -p ${px_hyper_port} ${px_hyper_user}@${px_hyper_host} "sudo /sbin/ifconfig | grep -A2 vmbr1 | grep -Po \"172\.\d+\.\d+\.\d+\" | head -1 | tr -d '\n' ; echo \" $px_hyper_host\"" >> /var/cld/tmp/gray_ip_list_tmp &
done
wait
rm -f $ct_px_hyper_list ; mv $temp_px_ct_hyper_list $ct_px_hyper_list

grep "172.16" /var/cld/creds/ct_px_hyper_list | sed 's#_# #g' | awk '{print $4" "$1}' >> /var/cld/tmp/gray_ip_list_tmp
sort /var/cld/tmp/gray_ip_list_tmp -u -o /var/cld/tmp/gray_ip_list_tmp
rm -f /var/cld/creds/gray_ip_list ; mv /var/cld/tmp/gray_ip_list_tmp /var/cld/creds/gray_ip_list
for PX_CT in $(grep "172.16" /var/cld/creds/ct_px_hyper_list | grep -v "STOPPED")
do
GRAY_IP=`echo $PX_CT | egrep -o "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$"`
GRAY_WHITE_IP=`grep $GRAY_IP /var/cld/creds/mikrotik_ip_list | head -1`
if [ "$GRAY_WHITE_IP" = "" ]
then echo -n ""
else sed -i -r "s#(_[0-9]+_)$GRAY_IP#\1$GRAY_WHITE_IP#g" /var/cld/creds/ct_px_hyper_list
fi
done

#Беру старый список, Сравниваю с новым чтобы отобразить только те которых нет в новом, Добавляю оффлайн в отдельный файл с пометкой OFFLINE
grep -vf /var/cld/creds/ct_px_hyper_list /var/cld/creds/ct_px_hyper_list_prev | awk '{print $1"_OFFLINE"}' >> /var/cld/creds/ct_px_hyper_list_offline

#Беру оффлайн список, Сравниваю с новым чтобы отобразить только те которых нет в новом т.к. они уже в онлайн
grep -vf /var/cld/creds/ct_px_hyper_list /var/cld/creds/ct_px_hyper_list_offline > /var/cld/creds/ct_px_hyper_list_offline_temp
mv /var/cld/creds/ct_px_hyper_list_offline_temp /var/cld/creds/ct_px_hyper_list_offline
### PROXMOX PARSE END

### OPENVZ PARSE START
temp_vz_ct_hyper_list="/var/cld/tmp/temp_vz_ct_hyper_list"
ct_vz_hyper_list="/var/cld/creds/ct_vz_hyper_list"
for vz_hyper in $(cat /var/cld/creds/vz_hyper_list)
do
timeout 5 ssh -o "RequestTTY force" -o "StrictHostKeyChecking no" -p 55567 clouds@$vz_hyper "sudo /usr/sbin/vzlist" | grep -v HOSTNAME | tr -d '\r' | awk '{print $5"_HYPER_"$1"_"$4}' | sed "s#HYPER#$vz_hyper#g" >> $temp_vz_ct_hyper_list &
done
sleep 5s
rm -f ct_vz_hyper_list ; mv $temp_vz_ct_hyper_list $ct_vz_hyper_list
### OPENVZ PARSE END

### GET DIGITALOCEAN DROPLETS LIST START
(
for cycle in $(seq 1 3)
do
curl -s -X GET "https://api.digitalocean.com/v2/droplets/$(echo $cycle | grep -q '^1$' || echo \?page=${cycle})" -H "Authorization: Bearer ${DIGITALOCEAN_TOKEN}"
done
) | tr ',' '\n' | grep -v "x64" | grep -v GrubLoader | egrep -v "\ [0-9]" | grep -Po "\"name\"\:\".*?\""\|"\"ip_address\":\"[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\"" | sed -e 's#"name":"##g' -e 's#"ip_address":"##g' -e 's#"##g' | tr '\n' ' ' | grep -Po ".*?\ \d+\.\d+\.\d+\.\d+" | awk '{print "DO-"$1"_"$2"_22_root"}' >> /var/cld/tmp/tmp_do_list
rm -f /var/cld/creds/do_list ; mv /var/cld/tmp/tmp_do_list /var/cld/creds/ext_do_list
### GET DIGITALOCEAN DROPLETS LIST END
