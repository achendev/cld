#!/bin/bash
HELP_DESC=$(cat << 'EOL'
Recursive filtering search around files in notes
Output is list of matched files
EOL
)
HELP_ARGS=$(cat << 'EOL'
$1-$20                   Patterns for recursive filtering
--json                   JSON output
--beauty                 Using together with --json option to beautify json output
EOL
)
HELP_EXAMPLES=$(cat << 'EOL'
cld-note watch mysql process
EOL
)
source /var/cld/bin/include/cldfuncs

for OPTS in ${@:1}
do
echo $OPTS | grep -q  '^\--json' && JSON=1
echo $OPTS | grep -q  '^\--beauty' && JSON_BEAUTY=1
done

CUT_ARG=' | cut -d / -f7'
JSON_ARG=' | jq -R -s -c 'split("\n")[:-1]''

[ "$JSON" == "1" ] && JSON_ARG=$(cat << 'EOL'
 | jq -R -s -c 'split("\n")[:-1]'
EOL
[ "$JSON_BEAUTY" == "1" -a "$FROM" == "API" ] && JSON_BEAUTY_ARG=' | jq . -C'
[ "$JSON_BEAUTY" == "1" -a "$FROM" != "API" ] && JSON_BEAUTY_ARG=' | jq .'

itter=1
source <(for ARG in ${@:1}
do
if [ "$itter" = "1" ]
then
echo -n grep -i "$ARG" /var/cld/modules/note/data/ -Rl
else
echo -n ' |' xargs -I ^ grep -li "$ARG" ^
fi
let itter++
done
echo -n ${CUT_ARG} ${JSON_ARG} ${JSON_BEAUTY_ARG})