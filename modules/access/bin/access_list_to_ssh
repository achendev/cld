#!/bin/bash
source /var/cld/bin/include/cldfuncs
DEPLOY_ACCESS_LIST=$(cat << EOACCESSLIST
cat > /etc/hosts.allow << 'EOHOSTSACCESS'
`(
grep -vh "^$\|^#" /var/cld/modules/access/data/myips | awk -F"_" '{print "sshd: "$1" # private ip of "$3"-"$4}'
grep -vh "^$\|^#" /var/cld/modules/access/data/enabledips | awk -F"_" '{print "sshd: "$1" # manual enabled ip of "$2}'
grep -vh "^$\|^#" /var/cld/access/groups/default/clouds | awk -F"_" '{print "sshd: "$2" # auto enabled ip of "$1}'
)`
EOHOSTSACCESS

truncate -s 0 /etc/hosts.deny
ALLOWED_IPS_LINES=\$(grep sshd /etc/hosts.allow | wc -l)
[ "\$ALLOWED_IPS_LINES" -ge "3" ] && echo "sshd: ALL" > /etc/hosts.deny || truncate -s 0 /etc/hosts.deny

cat >> /etc/hosts.deny << 'EOHOSTSBLACK'
`(
grep -svh "^$\|^#" /var/cld/modules/access/data/blackips | awk -F"_" '{print "sshd: "$1" # black ip of "$2}'
)`
EOHOSTSBLACK

cat > /etc/cron.d/hosts_deny_drop << 'EOCRON'
53-55 14-15 * * * root bash -lc "truncate -s 0 /etc/hosts.deny"
EOCRON
chmod 644 /etc/cron.d/hosts_deny_drop

cat > /etc/cron.d/iptables_access << 'EOCRON'
MAILTO=""
* * * * * root bash -lc "ps axfu | grep -v grep | grep -q accesslist || /bin/bash -l <(cat /root/sbin/iptables_access) accesslist"
EOCRON
chmod 644 /etc/cron.d/iptables_access

mkdir -p /root/sbin/ &>/dev/null

cat > /root/sbin/iptables_access << 'EOIPTABLES'
#!/bin/bash
ALLOWED_IPS=\$(cat << EOIPS
\$(cat /etc/hosts.allow | awk '{print \$2}' | sort -u | egrep -o "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}")
EOIPS
)

BLACK_IPS=\$(cat << EOIPS
\$(cat /etc/hosts.deny | awk '{print \$2}' | sort -u | egrep -o "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}")
EOIPS
)

[ "\$BLACK_IPS" ] || BLACK_IPS=172.31.255.254

ALLOWED_IPS_LINES=\$(echo "\$ALLOWED_IPS" | wc -l)

#Should be MORE than 1 ports
ALLOWED_PORTS=\$(cat << 'EOPORTS'
$(cat /var/cld/creds/protected_ports 2>/dev/null)
EOPORTS
)

echo \$ALLOWED_PORTS | grep "^\$" && ALLOWED_PORTS=\$(cat << 'EOPORTS'
21
22
5672
8006
8888
9090
10050
15672
25672
EOPORTS
)

LOCAL_NETS=\$(cat << 'EOPORTS'
$(cat /var/cld/creds/local_nets 2>/dev/null)
EOPORTS
)

echo \$LOCAL_NETS | grep "^\$" && LOCAL_NETS=\$(cat << 'EOPORTS'
172.16.0.0/24
EOPORTS
)

[ "\$ALLOWED_IPS_LINES" -ge "3" ] && source <(
iptables-save | grep -v conntrack | grep -q ESTABLISHED || iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables-save | grep -v "\$(echo \$ALLOWED_PORTS | tr ' ' '@' | sed 's#@#@%#g' | tr '@' ',' | tr '%' '\n')" | grep -v "\${BLACK_IPS}" | grep -v "/32 -j DROP" | iptables-restore
for LOCAL_NET in \$LOCAL_NETS
do
echo "iptables -A INPUT -s \${LOCAL_NET} -p tcp -m multiport --dports \$(echo \$ALLOWED_PORTS | tr ' ' ',') -j ACCEPT"
done
for IP in \$ALLOWED_IPS
do
cat << EOL
iptables -A INPUT -s \${IP}/32 -p tcp -m multiport --dports \$(echo \$ALLOWED_PORTS | tr ' ' ',') -j ACCEPT
EOL
done
cat << EOL
iptables -A INPUT -p tcp -m multiport --dports \$(echo \$ALLOWED_PORTS | tr ' ' ',') -j DROP
iptables -A INPUT -p udp -m multiport --dports \$(echo \$ALLOWED_PORTS | tr ' ' ',') -j DROP
EOL
for BLACK_IP in \$BLACK_IPS
do
cat << EOL
iptables -I INPUT -s \${BLACK_IP}/32 -j DROP
EOL
done
)

EOIPTABLES
chmod 700 /root/sbin/iptables_access
ps axfu | grep -v grep | grep -q accesslist || /bin/bash -l <(cat /root/sbin/iptables_access) accesslist
EOACCESSLIST
)

EXT=`cat /var/cld/access/groups/default/clouds | grep -v "^$\|^#"`
    for VM in $EXT
     do
       SRV=`echo $VM | cut -d "_" -f 2`
       PRT=`echo $VM | cut -d "_" -f 3`
       USR=`echo $VM | cut -d "_" -f 4`
(
timeout 30 ssh -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p $PRT $USR@$SRV "sudo bash -s" << EOSSH
$DEPLOY_ACCESS_LIST
EOSSH
) &
echo
     done

cat << EOL | bash
$DEPLOY_ACCESS_LIST
EOL
