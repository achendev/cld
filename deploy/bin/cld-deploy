#!/bin/bash

for OPTS in ${@:1}
do
echo $OPTS | grep -q  '\--deploy=' && DEPLOY=$(echo $OPTS | cut -d '=' -f 2)
done

source /var/cld/deploy/templates/${DEPLOY}/vars

for OPTS in ${@:1}
do
echo $OPTS | grep -q  '\--clouds=' && CLOUDS=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '\--test=' && TEST=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '\--backup=' && BACKUP=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '\--custombackup=' && CUSTOM_BACKUP=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '\--sync=' && SYNC=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '\--debug=' && DEBUG=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '\--cron=' && CRON=$(echo $OPTS | cut -d '=' -f 2)
done

ACTION_PREFIX=$(uuidgen  | cut -b -5)
ACTION_NAME=${DEPLOY}_${ACTION_PREFIX}
mkdir -p /var/cld/deploy/actions/ &>/dev/null
cp -r /var/cld/deploy/deploys/${DEPLOY} /var/cld/deploy/actions/${ACTION_NAME}

DEPLOY_SCRIPT="$(cat /var/cld/deploy/actions/${ACTION_NAME}/script)"

cat > /var/cld/deploy/actions/${ACTION_NAME}/vars << EOVARS
DESCRIPTION="${DESCRIPTION}"
CLOUDS="${CLOUDS}"
BACKUP=${BACKUP}
CUSTOM_BACKUP=${CUSTOM_BACKUP}
TEST=${TEST}
SYNC=${SYNC}
DEBUG=${DEBUG}
CRON="${CRON}"
EOVARS

source /var/cld/deploy/actions/${ACTION_NAME}/vars
source /var/cld/bin/include/cldfuncs

test "$SYNC" == 0 && BACKGROUND='&>/dev/null &'

OUTPUT_FORMAT=$(cat << 'EOUTPUT'
stty rows 50 columns 180 ; TERM=xterm
PS1='\[\033[01;34m\]\d \t \[\033[00m\]\u\[\033[01;33m\]@\[\033[01;36m\]\H \[\033[01;33m\]\w \[\033[01;35m\]$ \[\033[00m\] '
exec 9>&2
exec 8> >(
while [ "$r" != "1" ]; do
IFS='' read -rt 0.05 line; r=$?
if ! [ "${#line}" = "0" ]; then echo -ne "\e[1;31m${line}" ; fi
if [ "$r" = "0" ] ; then echo -e "\e[0m"; fi
if ! [ "$r" = "0" ] && ! [ "$r" = "142" ]; then sleep 0.05; fi
done)
function undirect(){ exec 2>&9; }
function redirect(){ exec 2>&8; }
trap "redirect;" DEBUG ; PROMPT_COMMAND='undirect;'
EOUTPUT
)
[ "$SUDO_USER" = "" ] && SUDO_USER=admin
for VM in $(CLOUDS_USER_ALLOWED | grep "$(echo $CLOUDS | tr ',' '\n')")
do
  CLD_DEPLOY_LOGS
  if [ "$VM" = "" ] ; then
   echo "you choosed incorrect VM, please try again and type numbers only"
  else
    GROUP=$(grep -l $VM /var/cld/access/groups/*/clouds | cut -d '/' -f 6)
    if [ "$GROUP" = "" ] ; then echo "choosen CLOUD have incorrect GROUP" ; exit 1 ; fi
    if grep -qs "1" /var/cld/access/groups/${GROUP}/funcs
    then
    source <(for GROUPFUNC in funcvars funcdeploy
        do
          echo "${GROUP}_${GROUPFUNC}(){"
          cat /var/cld/access/groups/${GROUP}/${GROUPFUNC}
          echo '}'
        done)
      CLD_VARS=${GROUP}_funcvars
      CLD_DEPLOY=${GROUP}_funcdeploy
    else
      CLD_VARS=EXTERNAL_VARS
      CLD_DEPLOY=EXTERNAL_DEPLOY
    fi
    echo "Deploy started at $VM"
    $CLD_VARS
    echo
    SCRIPT_LENGHT=$(wc -l << EODEPLOYRUN
$OUTPUT_FORMAT
$DEPLOY_SCRIPT
$OUTPUT_FORMAT
EODEPLOYRUN
)
source <(
echo "("
cat << 'EOSOURCE'
$CLD_DEPLOY << EODEPLOYRUN  | cldtail ${SCRIPT_LENGHT} | tee -a $CLD_ACTION_LOG
$OUTPUT_FORMAT
$DEPLOY_SCRIPT
exit
EODEPLOYRUN
EOSOURCE
echo ") ${BACKGROUND}"
)
echo
echo "Log file: $CLD_ACTION_LOG"
echo
  fi
done
test "$BACKGROUND" && bg
test "$BACKGROUND" && disown