#!/bin/bash
source /var/cld/bin/include/cldfuncs
for OPTS in ${@:1}
do
echo $OPTS | grep -q  '^\--template=' && TEMPLATE=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--deploy' && DEPLOY=1
echo $OPTS | grep -q  '^\--repoupdate' && REPOUPDATE=1
done

[ "$TEMPLATE" ] || source <(echo 'echo template not defined ; exit 1')

test "$DEPLOY" && source /var/cld/deploy/templates/${TEMPLATE}/vars

for OPTS in ${@:1}
do
echo $OPTS | grep -q  '^\--clouds=' && CLOUDS="$(echo $OPTS | cut -d '=' -f 2 | tr ',' '\n')"
echo $OPTS | grep -q  '^\--groups=' && CLD_GROUPS="$(echo $OPTS | cut -d '=' -f 2 | tr ',' '\n')"
echo $OPTS | grep -q  '^\--test=' && TEST=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--retry=' && RETRY=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--timeout=' && TIMEOUT=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--testtimeout=' && TEST_TIMEOUT=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--backuptimeout=' && BACKUP_TIMEOUT=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--nextdeploy=' && NEXT_DEPLOY=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--nextdeploywait=' && NEXT_DEPLOY_WAIT=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--nextdeployargs=' && NEXT_DEPLOY_ARGS=$(echo $OPTS | cut -d '=' -f 2-)
echo $OPTS | grep -q  '^\--backup=' && BACKUP=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--custombackup=' && CUSTOM_BACKUP=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--async=' && ASYNC=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--debug=' && DEBUG=$(echo $OPTS | cut -d '=' -f 2)
echo $OPTS | grep -q  '^\--cron=' && CRON=$(echo $OPTS | cut -d '=' -f 2)
done

create-deploy()
{
stat /var/cld/deploy/deploys/${TEMPLATE} &>/dev/null && DEPLOY_EXIST=1
DEPLOY_ID=$(ls -d /var/cld/deploy/deploys/${TEMPLATE}_* 2>/dev/null | tail -1 | egrep -o "_[0-9]+$" | tr -d _)
test "$DEPLOY_ID" != "" -o "$DEPLOY_EXIST" == "1" && let "DEPLOY_ID++"
test "$DEPLOY_ID" && DEPLOY_NAME="${TEMPLATE}_${DEPLOY_ID}" || DEPLOY_NAME="${TEMPLATE}"

[ "$TIMEOUT" ] || TIMEOUT=3600
[ "$TEST_TIMEOUT" ] || TEST_TIMEOUT=600
[ "$BACKUP_TIMEOUT" ] || BACKUP_TIMEOUT=600
[ "$RETRY" ] || RETRY=1

mkdir -p /var/cld/deploy/deploys/ &>/dev/null
cp -r /var/cld/deploy/templates/${TEMPLATE} /var/cld/deploy/deploys/${DEPLOY_NAME}
test "${CLOUDS}" && echo "${CLOUDS}" > /var/cld/deploy/deploys/${DEPLOY_NAME}/clouds
cat > /var/cld/deploy/deploys/${DEPLOY_NAME}/vars << EOVARS
DESCRIPTION="${DESCRIPTION}"
CLD_GROUPS="${CLD_GROUPS}"
BACKUP="${BACKUP}"
CUSTOM_BACKUP="${CUSTOM_BACKUP}"
TEST="${TEST}"
RETRY="${RETRY}"
TIMEOUT="${TIMEOUT}"
TEST_TIMEOUT="${TEST_TIMEOUT}"
BACKUP_TIMEOUT="${BACKUP_TIMEOUT}"
ASYNC="${ASYNC}"
NEXT_DEPLOY="${NEXT_DEPLOY}"
NEXT_DEPLOY_WAIT="${NEXT_DEPLOY_WAIT}"
NEXT_DEPLOY_ARGS="${NEXT_DEPLOY_ARGS}"
DEBUG=${DEBUG}
CRON="${CRON}"
EOVARS
ls /var/cld/deploy/deploys/${DEPLOY_NAME}/* | cat
}

create-template()
{
mkdir -p /var/cld/deploy/templates/${TEMPLATE} &>/dev/null

test "$DESCRIPTION" || DESCRIPTION=0

touch /var/cld/deploy/templates/${TEMPLATE}/script

test "$BACKUP" || BACKUP=0
test "${BACKUP}" == 1 && touch /var/cld/deploy/templates/${TEMPLATE}/backup_files

test "$CUSTOM_BACKUP" || CUSTOM_BACKUP=0
test "${CUSTOM_BACKUP}" == 1 && touch /var/cld/deploy/templates/${TEMPLATE}/custom_backup_script
test "${CUSTOM_BACKUP}" == 1 && touch /var/cld/deploy/templates/${TEMPLATE}/custom_restore_script

test "$TEST" || TEST=0
test "${TEST}" == 1 && touch /var/cld/deploy/templates/${TEMPLATE}/test_script

[ "$TIMEOUT" ] || TIMEOUT=600
[ "$TEST_TIMEOUT" ] || TEST_TIMEOUT=600
[ "$BACKUP_TIMEOUT" ] || BACKUP_TIMEOUT=600
[ "$RETRY" ] || RETRY=1

test "$ASYNC" || ASYNC=0

test "$DEBUG" || DEBUG=0

echo "$CRON" | egrep -q "^(\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])|\*\/([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])) (\*|([0-9]|1[0-9]|2[0-3])|\*\/([0-9]|1[0-9]|2[0-3])) (\*|([1-9]|1[0-9]|2[0-9]|3[0-1])|\*\/([1-9]|1[0-9]|2[0-9]|3[0-1])) (\*|([1-9]|1[0-2])|\*\/([1-9]|1[0-2])) (\*|[0-6]\*\-[0-6]|[0-6])$" || CRON=0

cat > /var/cld/deploy/templates/${TEMPLATE}/vars << EOVARS
DESCRIPTION="${DESCRIPTION}"
BACKUP="${BACKUP}"
CUSTOM_BACKUP="${CUSTOM_BACKUP}"
TEST="${TEST}"
RETRY="${RETRY}"
TIMEOUT="${TIMEOUT}"
TEST_TIMEOUT="${TEST_TIMEOUT}"
BACKUP_TIMEOUT="${BACKUP_TIMEOUT}"
ASYNC="${ASYNC}"
NEXT_DEPLOY="${NEXT_DEPLOY}"
NEXT_DEPLOY_WAIT="${NEXT_DEPLOY_WAIT}"
NEXT_DEPLOY_ARGS="${NEXT_DEPLOY_ARGS}"
DEBUG=${DEBUG}
CRON="${CRON}"
EOVARS

ls /var/cld/deploy/templates/${TEMPLATE}/* | cat
}

update-templates-from-repo()
{
stat /tmp/temprepos &>/dev/null && rm -rf /tmp/temprepos/
mkdir /tmp/temprepos &>/dev/null
cd /tmp/temprepos
for TEMPLATE_REPO in $(cat /var/cld/deploy/repo_list)
do
  git clone $TEMPLATE_REPO
  TEMPLATE_REPO_NAME=$(echo "${TEMPLATE_REPO}" | rev | cut -d . -f 2- | cut -d / -f -1 | rev)
  for TEMPLATE in $(ls -d ${TEMPLATE_REPO_NAME}/*/ | sed 's#/$##g')
  do
    rsync -avP ${TEMPLATE} /var/cld/deploy/templates/ --delete
  done
done
}

[ "$REPOUPDATE" ] && source <(echo "update-templates-from-repo ; exit 0")
[ "$DEPLOY" ] && create-deploy || create-template